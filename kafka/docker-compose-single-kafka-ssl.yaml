version: "3.9"
services:
  kafka1:
    image: 'bitnami/kafka:latest'
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      # NODE_ID is mandatory
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=SSL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:SSL,SSL:SSL
      - KAFKA_CFG_ADVERTISED_LISTENERS=SSL://:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=SSL
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@:9093
      - ALLOW_PLAINTEXT_LISTENER=no
      - KAFKA_KRAFT_CLUSTER_ID=L0ZEQh1yTbGhNNUE7-6wSQ
      # TODO: Create topics on start of kafka, disable auto creation
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      # works ONLY for https://hub.docker.com/r/wurstmeister/kafka image
      - KAFKA_CREATE_TOPICS=ExampleTopic:1:1
      - KAFKA_SSL_CLIENT_AUTH=required
      #- KAFKA_TLS_TYPE=PEM
      #- KAFKA_SSL_KEYSTORE_TYPE=PEM
      #- KAFKA_SSL_TRUSTSTORE_TYPE=PEM
      - KAFKA_CERTIFICATE_PASSWORD=datapass
      #- KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=
      - KAFKA_TLS_CLIENT_AUTH=required
      #- BITNAMI_DEBUG=true
    volumes:
      - volume1:/bitnami/kafka
      - ./secrets:/bitnami/kafka/config/certs
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  volume1:
